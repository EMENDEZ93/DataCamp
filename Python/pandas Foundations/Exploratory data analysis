Q1:-
Create a list of y-axis column names called y_columns consisting of 'AAPL' and 'IBM'.
Generate a line plot with x='Month' and y=y_columns as inputs.
Give the plot a title of 'Monthly stock prices'.
Specify the y-axis label.
Display the plot.

Solution:-
# Create a list of y-axis column names: y_columns
y_columns = ['AAPL','IBM']

# Generate a line plot
df.plot(x='Month', y=y_columns)

# Add the title
plt.title('Monthly stock prices')

# Add the y-axis label
plt.ylabel('Price ($US)')

# Display the plot
plt.show()

Q2:-
Generate a scatter plot with 'hp' on the x-axis and 'mpg' on the y-axis. Specify s=sizes.
Add a title to the plot.
Specify the x-axis and y-axis labels.

Solution:-
# Generate a scatter plot
df.plot(kind='scatter', x='hp', y='mpg', s=sizes)

# Add the title
plt.title('Fuel efficiency vs Horse-power')

# Add the x-axis label
plt.xlabel('Horse-power')

# Add the y-axis label
plt.ylabel('Fuel efficiency (mpg)')

# Display the plot
plt.show()

Q3:-
Make a list called cols of the column names to be plotted: 'weight' and 'mpg'. You can then access it using df[cols].
Generate a box plot of the two columns in a single figure. To do this, specify subplots=True

Solution:-
# Make a list of the column names to be plotted: cols
cols = ['weight','mpg']

# Generate the box plots
df[cols].plot(kind='box',subplots=True)

# Display the plot
plt.show()

Q4:-
Plot a PDF for the values in fraction with 30 bins between 0 and 30%. 
The range has been taken care of for you. ax=axes[0] means that this plot will appear in the first row.
Plot a CDF for the values in fraction with 30 bins between 0 and 30%. 
Again, the range has been specified for you. To make the CDF appear on the second row, you need to specify ax=axes[1].

Solution:-
# This formats the plots such that they appear on separate rows
fig, axes = plt.subplots(nrows=2, ncols=1)

# Plot the PDF
df.fraction.plot(ax=axes[0], kind='hist', bins=30, normed=True, range=(0,.3))
plt.show()

# Plot the CDF
df.fraction.plot(kind='hist', bins=30, cumulative=True, normed=True, ax=axes[1], range=(0,.3))
plt.show()

Q5:-
